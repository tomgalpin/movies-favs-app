{"version":3,"sources":["store/playlist.js","store/index.js","assets/styles/reset.js","assets/styles/globals.js","pages/app/styled-app.js","assets/styles/_variables.js","components/search-bar/styled-search-bar.js","components/search-bar/search-bar.js","components/header/styled-header.js","components/header/header.js","components/search-title/search-title.js","components/movies-grid/styled-movies-grid.js","components/movie/styled-movie.js","assets/images/image-not-found.png","components/movie/movie.js","components/movies-grid/movies-grid.js","pages/search/search.js","pages/playlist/styled-playlist.js","pages/playlist/playlist.js","pages/app/app.js","index.js"],"names":["playlist","createSlice","name","initialState","value","count","reducers","addToPlaylist","state","payload","id","title","poster","actions","reducer","combineReducers","store","configureStore","reset","css","GlobalStyle","createGlobalStyle","StyledApp","styled","div","colors","screenWidths","StyledSearchBar","SearchBar","props","useState","formValue","setFormValue","data-testid","color","onSubmit","e","handleSubmit","type","placeholder","onChange","target","StyledHeader","header","StyledRouterLink","Link","Header","playlistCount","useSelector","href","rel","to","StyledSearchTitle","h3","SearchTitle","searchParams","searchTitle","length","StyledMoviesGrid","section","iconSize","StyledMovie","StyledPoster","StyledAddBtn","button","hasMovieInPlaylist","StyledTitle","test","Movie","dispatch","useDispatch","addMovie","isPlaylist","onClick","renderAddBtn","src","alt","onError","event","ImageNotFound","MoviesGrid","movies","map","item","index","imdbID","PageSearch","baseUrl","fastFurious","currPage","setCurrPage","hasMoreMovies","setHasMoreMovies","initNewSearch","setInitNewSearch","isLoading","setIsLoading","getUrl","setGetUrl","setMovies","setSearchParams","totalPages","setTotalPages","observer","useRef","useEffect","getMovies","prev","filterForMovies","list","result","forEach","Type","push","Title","Poster","page","startNewSearch","a","pageNum","url","Promise","resolve","setTimeout","axios","get","then","response","data","Response","pages","Math","ceil","totalResults","filteredMovies","Search","moviesList","observerRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","trimmed","trim","preventDefault","uriEncoded","encodeURIComponent","searchUrl","ref","footerHeight","StyledPagePlaylist","StyledFooter","PagePlaylist","playlistMovies","Object","values","hasMovies","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f28784a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  playlist: {\n    value: {},\n  },\n  count: {\n    value: 0,\n  },\n};\n\nconst playlist = createSlice({\n  name: 'playlist',\n  initialState: initialState,\n\n  reducers: {\n    addToPlaylist: (state, { payload }) => {\n      state.playlist.value[payload.id] = {\n        title: payload.title,\n        poster: payload.poster,\n        id: payload.id,\n      };\n\n      state.count.value = state.count.value + 1;\n    },\n  },\n});\n\nexport const { addToPlaylist } = playlist.actions;\n\nexport default playlist.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport playlist from './playlist';\n\nconst reducer = combineReducers({\n  playlist,\n});\n\nconst store = configureStore({\n  reducer,\n});\n\nexport default store;\n","import { css, createGlobalStyle } from 'styled-components';\n\n// Adapted from https://github.com/zacanger/styled-reset\n/* http://meyerweb.com/eric/tools/css/reset/\n   v5.0.1 | 20191019\n   License: none (public domain)\n*/\n\n// prettier-ignore\nexport const reset = css`\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  b,\n  u,\n  i,\n  center,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td,\n  article,\n  aside,\n  canvas,\n  details,\n  embed,\n  figure,\n  figcaption,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  output,\n  ruby,\n  section,\n  summary,\n  time,\n  mark,\n  audio,\n  video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol,\n  ul {\n    list-style: none;\n  }\n  blockquote,\n  q {\n    quotes: none;\n  }\n  a {\n    text-decoration: none;\n  }\n  blockquote:before,\n  blockquote:after,\n  q:before,\n  q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n`;\n\nexport const Reset = createGlobalStyle`${reset}`;\n\nexport default reset;\n","import { createGlobalStyle } from 'styled-components';\nimport { reset } from 'assets/styles/reset';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  body {\n    font-family: 'Inter', sans-serif;\n    padding: 20px 20px 0 20px;\n    position: relative;\n\n    &.no-scroll {\n      overflow: hidden;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nconst StyledApp = styled.div`\n  position: relative;\n  max-width: 1200px;\n  min-width: 300px;\n  min-height: 100vh;\n  margin: 0 auto;\n`;\n\nexport { StyledApp };\n","const colors = {\n  black: '#000000',\n  white: '#ffffff',\n  gray: '#C0C4CC',\n  mediumGray: '#888888',\n  green: '#4BB543',\n  pink: '#ffa5be',\n};\n\nconst screenWidths = {\n  mobile: '400px',\n  tablet: '768px',\n  desktop: '1024px',\n};\n\nexport { colors, screenWidths };\n","import styled from 'styled-components';\nimport { colors } from 'assets/styles/_variables';\n\nconst StyledSearchBar = styled.div`\n  display: flex;\n  align-items: center;\n  border: 1px solid ${colors['gray']};\n  padding: 5px 10px;\n  border-radius: 2px;\n  background-color: ${colors.white};\n\n  img {\n    height: 16px;\n    width: 16px;\n  }\n\n  input {\n    height: 16px;\n    margin: 0 0 0 8px;\n    padding: 5px 10px 5px 0;\n    border: none;\n  }\n`;\n\nexport { StyledSearchBar };\n","import { useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport { StyledSearchBar } from 'components/search-bar/styled-search-bar';\nimport { colors } from 'assets/styles/_variables';\n\nconst SearchBar = (props) => {\n  const [formValue, setFormValue] = useState('');\n\n  return (\n    <StyledSearchBar data-testid=\"search-bar\">\n      <FaSearch color={colors.gray} />\n      <form onSubmit={(e) => props.handleSubmit(e, formValue)}>\n        <input\n          type=\"text\"\n          value={formValue}\n          placeholder=\"Search for a movie\"\n          onChange={(e) => setFormValue(e.target.value)}\n        />\n      </form>\n    </StyledSearchBar>\n  );\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { colors, screenWidths } from 'assets/styles/_variables';\n\nconst StyledHeader = styled.header`\n  padding-bottom: 20px;\n  border-bottom: 1px solid ${colors['gray']};\n  margin-bottom: 37px;\n  background-color: ${colors.white};\n\n  @media screen and (min-width: ${screenWidths.tablet}) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  h1 {\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 10px;\n\n    @media screen and (min-width: ${screenWidths.mobile}) {\n      font-size: 24px;\n    }\n\n    @media screen and (min-width: ${screenWidths.tablet}) {\n      margin-bottom: 0;\n    }\n\n    span {\n      color: ${colors.pink};\n    }\n  }\n`;\n\nconst StyledRouterLink = styled(Link)`\n  display: block;\n  font-size: 15px;\n  font-weight: bold;\n  color: ${colors.black};\n  margin-bottom: 10px;\n\n  &:hover {\n    color: ${colors.pink};\n  }\n\n  @media screen and (min-width: ${screenWidths.mobile}) {\n    font-size: 20px;\n  }\n\n  @media screen and (min-width: ${screenWidths.tablet}) {\n    margin-bottom: 0;\n  }\n`;\n\nexport { StyledHeader, StyledRouterLink };\n","import { useSelector } from 'react-redux';\nimport SearchBar from 'components/search-bar/search-bar';\nimport {\n  StyledHeader,\n  StyledRouterLink,\n} from 'components/header/styled-header';\n\nconst Header = (props) => {\n  const playlistCount = useSelector((state) => state.playlist.count.value);\n\n  return (\n    <StyledHeader data-testid=\"header\">\n      <h1>\n        Movies for\n        <a href=\"https://www.fast.co/\" target=\"_blank\" rel=\"noreferrer\">\n          <span> Fastronauts</span>\n        </a>\n      </h1>\n      <StyledRouterLink to=\"/playlist\" data-testid=\"route-playlist\">\n        Your Playlist: ({playlistCount})\n      </StyledRouterLink>\n      <SearchBar handleSubmit={props.handleSubmit} />\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\nimport { colors } from 'assets/styles/_variables';\n\nconst StyledSearchTitle = styled.h3`\n  font-style: normal;\n  color: ${colors.black};\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 28px;\n  letter-spacing: -0.01em;\n  margin-bottom: 23px;\n`;\n\nconst SearchTitle = ({ searchParams }) => {\n  const isValidSearchParam = searchParams.length > 0;\n  const searchTitle = isValidSearchParam\n    ? `Search:  ${searchParams}`\n    : 'The Fast and the Furious Movies';\n\n  return (\n    <StyledSearchTitle data-testid=\"search-title\">\n      {searchTitle}\n    </StyledSearchTitle>\n  );\n};\n\nexport default SearchTitle;\n","import styled from 'styled-components';\nimport { screenWidths } from 'assets/styles/_variables';\n\nconst StyledMoviesGrid = styled.section`\n  display: grid;\n  grid-gap: 26px;\n  grid-template-columns: 1fr;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: ${screenWidths.tablet}) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media screen and (min-width: ${screenWidths.desktop}) {\n    grid-template-columns: repeat(4, 1fr);\n  } ;\n`;\n\nexport { StyledMoviesGrid };\n","import styled from 'styled-components';\nimport { colors } from 'assets/styles/_variables';\n\nconst iconSize = '24px';\n\nconst StyledMovie = styled.div`\n  position: relative;\n  background: ${colors.black};\n  border: 1px solid ${colors.gray};\n  box-shadow: 1px 2px 8px 2px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  overflow: hidden;\n  height: 200px;\n\n  &:hover {\n    box-shadow: none;\n  }\n`;\n\nconst StyledPoster = styled.div`\n  height: 100%;\n  width: 100%;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    overflow: hidden;\n  }\n`;\n\nconst StyledAddBtn = styled.button`\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: ${iconSize};\n  width: ${iconSize};\n  border-radius: 50%;\n  padding: 0;\n  margin: 0;\n  border: none;\n  cursor: ${(props) => (props.hasMovieInPlaylist ? 'default' : 'pointer')};\n\n  svg {\n    height: ${iconSize};\n    width: ${iconSize};\n  }\n`;\n\nconst StyledTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: ${(test) => (test ? colors.green : colors.black)};\n  background: linear-gradient(\n    0deg,\n    rgba(0, 0, 0, 0.8085609243697479) 22%,\n    rgba(255, 255, 255, 0) 100%\n  );\n  text-align: center;\n\n  p {\n    font-size: 16px;\n    line-height: 26px;\n    color: ${colors.white};\n    width: 80%;\n    margin: 0 auto 20px auto;\n  }\n`;\n\nexport { StyledMovie, StyledPoster, StyledAddBtn, StyledTitle };\n","export default __webpack_public_path__ + \"static/media/image-not-found.585b4f76.png\";","import { useDispatch, useSelector } from 'react-redux';\nimport { addToPlaylist } from 'store/playlist.js';\nimport { FaRegCheckCircle, FaPlusCircle } from 'react-icons/fa';\nimport {\n  StyledMovie,\n  StyledPoster,\n  StyledAddBtn,\n  StyledTitle,\n} from 'components/movie/styled-movie';\nimport ImageNotFound from 'assets/images/image-not-found.png';\nimport { colors } from 'assets/styles/_variables';\n\nconst Movie = (props) => {\n  const dispatch = useDispatch();\n  const playlist = useSelector((state) => state.playlist.playlist.value);\n  const hasMovieInPlaylist = !!playlist[props.id];\n\n  const addMovie = () => {\n    dispatch(addToPlaylist(props));\n  };\n\n  const renderIcon = () => {\n    if (hasMovieInPlaylist) {\n      return <FaRegCheckCircle color={colors.green} />;\n    } else {\n      return <FaPlusCircle color={colors.mediumGray} />;\n    }\n  };\n\n  const renderAddBtn = () => {\n    if (!props.isPlaylist) {\n      return (\n        <StyledAddBtn\n          onClick={addMovie}\n          hasMovieInPlaylist={hasMovieInPlaylist}\n        >\n          {renderIcon()}\n        </StyledAddBtn>\n      );\n    }\n  };\n\n  return (\n    <StyledMovie data-testid=\"movie\">\n      {renderAddBtn()}\n      <StyledPoster>\n        <img\n          src={props.poster}\n          alt={props.title}\n          onError={(event) => (event.target.src = ImageNotFound)}\n        />\n      </StyledPoster>\n      <StyledTitle>\n        <p>{props.title}</p>\n      </StyledTitle>\n    </StyledMovie>\n  );\n};\n\nexport default Movie;\n","import { StyledMoviesGrid } from 'components/movies-grid/styled-movies-grid';\nimport Movie from 'components/movie/movie';\n\nconst MoviesGrid = ({ movies, isPlaylist }) => {\n  const renderMovies = () => {\n    return movies.map((item, index) => {\n      return (\n        <Movie\n          key={index}\n          poster={item.poster}\n          title={item.title}\n          id={item.imdbID}\n          isPlaylist={isPlaylist}\n        />\n      );\n    });\n  };\n\n  return (\n    <StyledMoviesGrid data-testid=\"movies-grid\">\n      {renderMovies()}\n    </StyledMoviesGrid>\n  );\n};\n\nexport default MoviesGrid;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport Header from 'components/header/header';\nimport SearchTitle from 'components/search-title/search-title';\nimport MoviesGrid from 'components/movies-grid/movies-grid';\n\nconst PageSearch = () => {\n  const apiKey = 'a73ed059';\n  const baseUrl = `https://www.omdbapi.com/?apiKey=${apiKey}`;\n  const fastFurious = `${baseUrl}&s=The%20Fast%20and%20the%20Furious`;\n\n  const [currPage, setCurrPage] = useState(1);\n  const [hasMoreMovies, setHasMoreMovies] = useState(true);\n  const [initNewSearch, setInitNewSearch] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [getUrl, setGetUrl] = useState(fastFurious);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useState('');\n  const [totalPages, setTotalPages] = useState(0);\n  const observer = useRef(null);\n\n  useEffect(() => {\n    /*\n     * Sets state variables and gets movies\n     * @param {bool} getUrl\n     * @return {function}\n     */\n\n    if (initNewSearch) setHasMoreMovies(true);\n\n    getMovies(currPage, initNewSearch);\n    setCurrPage((prev) => prev + 1);\n  }, [getUrl]);\n\n  const filterForMovies = (list) => {\n    /**\n     * Returns only movies from list\n     * @param {array} list\n     * @return {array} result\n     */\n\n    let result = [];\n\n    list.forEach((item, index) => {\n      if (item.Type === 'movie') {\n        result.push({\n          title: item.Title,\n          poster: item.Poster,\n          imdbID: item.imdbID,\n        });\n      }\n    });\n\n    return result;\n  };\n\n  const getMovies = async (page, startNewSearch) => {\n    /*\n     * Gets movies from getUrl\n     * Sets state variables\n     * @param {int} page\n     * @param {bool} startNewSearch\n     * @return {function}\n     */\n\n    const pageNum = startNewSearch ? 1 : page;\n    const url = `${getUrl}&page=${pageNum}`;\n\n    setIsLoading(true);\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n\n    await axios.get(url).then((response) => {\n      const hasData = response.data.Response === 'True';\n\n      if (hasData) {\n        const pages = Math.ceil(response.data.totalResults / 10);\n        const filteredMovies = filterForMovies(response.data.Search);\n        const moviesList = startNewSearch\n          ? filteredMovies\n          : [...movies, ...filteredMovies];\n\n        setTotalPages(pages);\n        setMovies(moviesList);\n      }\n    });\n\n    setIsLoading(false);\n  };\n\n  const handleSubmit = (e, formValue) => {\n    /*\n     * Handles sumbit of form and sets state variables\n     * @param {obj} e\n     * @param {string} formValue\n     * @return {function}\n     */\n\n    const trimmed = formValue.trim();\n\n    e.preventDefault();\n    setInitNewSearch(true);\n\n    if (trimmed.length > 0) {\n      const uriEncoded = encodeURIComponent(trimmed);\n      const searchUrl = `${baseUrl}&s=${uriEncoded}`;\n\n      setMovies([]);\n      setSearchParams(trimmed);\n      setGetUrl(searchUrl);\n    } else {\n      setSearchParams('');\n      setCurrPage(1);\n      setGetUrl(fastFurious);\n    }\n  };\n\n  const observerRef = useCallback(\n    /*\n     * Sets IntersectionObserver and sets state vars when in view\n     * @param {bool} isLoading\n     * @param {bool} hasMoreMovies\n     * @return {function}\n     */\n\n    (node) => {\n      if (isLoading) return;\n      if (observer.current) observer.current.disconnect();\n\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMoreMovies) {\n          if (currPage <= totalPages) {\n            getMovies(currPage, false);\n            setHasMoreMovies(true);\n            setCurrPage((prev) => prev + 1);\n          } else {\n            setHasMoreMovies(false);\n          }\n        }\n      });\n\n      if (node) observer.current.observe(node);\n    },\n    [isLoading, hasMoreMovies],\n  );\n\n  const renderGrid = () => {\n    /**\n     * Renders the Movies Grid or an error message\n     */\n\n    if (movies.length > 0) {\n      return (\n        <MoviesGrid movies={movies} isLoading={isLoading} isPlaylist={false} />\n      );\n    } else if (!isLoading) {\n      return <p>There are no movies from this search.</p>;\n    }\n  };\n\n  return (\n    <div data-testid=\"page-search\">\n      <Header handleSubmit={handleSubmit} />\n      <main>\n        <SearchTitle searchParams={searchParams} />\n        {renderGrid()}\n        <div>{isLoading && 'Loading Movies......'}</div>\n        <div ref={observerRef} />\n      </main>\n    </div>\n  );\n};\n\nexport default PageSearch;\n","import styled from 'styled-components';\nimport { colors } from 'assets/styles/_variables';\n\nconst footerHeight = '100px';\n\nconst StyledPagePlaylist = styled.div`\n  min-height: 100vh;\n  background-color: ${colors.green};\n\n  main {\n    padding: 0 20px ${footerHeight} 20px;\n  }\n`;\n\nconst StyledFooter = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: ${footerHeight};\n  background-color: ${colors.white};\n`;\n\nexport { StyledPagePlaylist, StyledFooter };\n","import { useSelector } from 'react-redux';\nimport MoviesGrid from 'components/movies-grid/movies-grid';\nimport {\n  StyledPagePlaylist,\n  StyledFooter,\n} from 'pages/playlist/styled-playlist';\nimport {\n  StyledHeader,\n  StyledRouterLink,\n} from 'components/header/styled-header';\n\nconst PagePlaylist = () => {\n  const playlistMovies = useSelector((state) => state.playlist.playlist.value);\n  const movies = Object.values(playlistMovies);\n  const hasMovies = movies.length > 0;\n\n  const renderGrid = () => {\n    if (hasMovies) {\n      return <MoviesGrid movies={movies} isLoading={false} isPlaylist={true} />;\n    } else {\n      return <p>Sorry You do not have any movies in your playlist.</p>;\n    }\n  };\n\n  return (\n    <StyledPagePlaylist data-testid=\"page-playlist\">\n      <StyledHeader>\n        <StyledRouterLink to=\"/\">Home</StyledRouterLink>\n        <h1>Your Playlist</h1>\n      </StyledHeader>\n      <main>{renderGrid()}</main>\n      <StyledFooter>\n        <p>My favorite color is green.</p>\n      </StyledFooter>\n    </StyledPagePlaylist>\n  );\n};\n\nexport default PagePlaylist;\n","import React from 'react';\nimport {\n  Redirect,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { StyledApp } from 'pages/app/styled-app';\nimport PageSearch from 'pages/search/search';\nimport PagePlaylist from 'pages/playlist/playlist';\n\nconst App = () => {\n  return (\n    <Router>\n      <StyledApp>\n        <Switch>\n          <Route path=\"/\" exact component={PageSearch} />\n          <Route path=\"/playlist\" exact component={PagePlaylist} />\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </StyledApp>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from 'store';\nimport GlobalStyles from 'assets/styles/globals';\nimport App from 'pages/app/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyles />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}